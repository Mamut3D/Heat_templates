heat_template_version: 2013-05-23

description: Template that installs mesos master server(s).

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use an Ubuntu based image.
    default: bbd62832-062e-445a-b7da-6c67d02b35a8
    constraints:
      - custom_constraint: glance.image
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
  key_name:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: my_key
    constraints:
      - custom_constraint: nova.keypair
  private_network:
    type: string
    description: Name of private network to be created
    default: PrivateNetwork
  public_network:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
    default: seg-10.16.31.128-191
  zookeeper_my_id:
    type: string
    label: Key name
    description: Zookeper id /etc/zookeeper/conf/myid. Each master in cluster should have different.
    default: "1"

resources:
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_resource: port }

  server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __floating_ip__: { get_attr: [floating_ip, floating_ip_address] }
            __zookeeper_my_id__: { get_param: zookeeper_my_id}
          template: |
            #!/bin/sh
            sudo su
            
            cat <<'EOF' > /root/install.sh
            #!/bin/sh
            # End on any nonzero exit code
            set -e
            echo "export http_proxy=http://ogun.ics.muni.cz:3128/" >> /etc/environment
            echo "export https_proxy=http://ogun.ics.muni.cz:3128/" >> /etc/environment
            export http_proxy=http://ogun.ics.muni.cz:3128/
            export https_proxy=http://ogun.ics.muni.cz:3128/
            apt-get install htop vim -y
            echo "__floating_ip__ $(hostname)" >> /etc/hosts

            # Mesos master install
            # Setup 
            apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E56151BF
            DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
            CODENAME=$(lsb_release -cs)
            # Add the repository
            echo "deb http://repos.mesosphere.com/${DISTRO} ${CODENAME} main" > /etc/apt/sources.list.d/mesosphere.list
            # Install Java 8 from Oracle's PPA
            add-apt-repository ppa:webupd8team/java -y
            apt-get update -y
            echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
            echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
            apt-get install -y oracle-java8-installer oracle-java8-set-default
            
            apt-get -y install mesos marathon           
            
            # Configure Zookeper
            echo "__zookeeper_my_id__" > /etc/zookeeper/conf/myid
            echo "server.1=__floating_ip__:2888:3888" > /etc/zookeeper/conf/zoo.cfg
            
            # Start zookeeper
            service zookeeper restart

            # Config mesos and marathon
            echo "zk://__floating_ip__:2181/mesos" > /etc/mesos/zk
            echo "1" > /etc/mesos-master/quorum
            echo "$(hostname)" > /etc/mesos-master/hostname
            echo "$(hostname)" > /etc/marathon/conf/hostname   

            # Disable mesos slave
            service mesos-slave stop
            echo "manual" > /etc/init/mesos-slave.override

            # Restart services
            service mesos-master restart
            


            echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            echo "SCRIPT FINISHED SUCESFULLY"
            echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            EOF
            chmod 700 /root/install.sh
            
            . /root/install.sh >> /root/install_mesos.log
            echo $? >> /root/install_mesos.log

outputs:
  name:
    description: Name of the tiny instance.
    value: { get_attr: [server, name] }
  ip:
    description: The IP address of the tiny instance.
    value: { get_attr: [server, first_address] }
  port:
    description: The network port of the Flasky instance.
    value: { get_resource: port }
  floating_ip:
    description: The network port of the Flasky instance.
    value: { get_resource: floating_ip }
