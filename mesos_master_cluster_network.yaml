heat_template_version: 2013-05-23

description: >
  HOT template to create multiple instances of single server. Each server will have
  it's own private network...

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server. Please use an Ubuntu based image.
    default: bbd62832-062e-445a-b7da-6c67d02b35a8
    constraints:
      - custom_constraint: glance.image
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
  key_name:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: my_key
    constraints:
      - custom_constraint: nova.keypair
  private_network:
    type: string
    description: Name of private network to be created
    default: PrivateNetwork
  public_network:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
    default: seg-10.16.31.128-191

  cluster_size:
    type: number
    label: Cluster size
    description: Number of instances in cluster.
    default: 2


resources:
  mesos_net:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: cluster_size}
      resource_def:
        type: lib/mesos_master_network.yaml
        properties:
          private_network: PrivateNetwork
          public_network: seg-10.16.31.128-191

  master_servers:
    type: OS::Heat::ResourceGroup
    depends_on: mesos_net
    properties:
      count: {get_param: cluster_size}
      resource_def:
        type: lib/mesos_master.yaml
        properties:
          name: MasterNode_%index%
          node_index: '%index%'
          cluster_size: {get_param: cluster_size}
          flavor: {get_param: flavor}
          floating_ip:
            get_attr: [mesos_net,floating_ip,'%index%']
          image: {get_param: image}
          key_name: {get_param: key_name}
          port:
            get_attr: [mesos_net,port,'%index%']

 
outputs:
  floating_ip:
    description: Yeah!
    value: {get_attr: [mesos_net,floating_ip] } 
